
name: 00_esignet
services:

    #.localhost is used to avoid going through corporate proxy, as localhost is not proxied (no_proxy rule)
  esignet-database.localhost:
    image: 'postgres:bookworm'
    ports:
      - 5455:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init-esignet.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - network

  esignet-redis.localhost:
    image: redis:6.0
    container_name: redis-server
    ports:
      - "6379:6379"
    restart: always
    networks:
      - network

  mock-identity-system.localhost:
    image: 'mosipid/mock-identity-system:0.10.1'
    user: root
    ports:
      - 8082:8082
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://esignet-database.localhost:5432/mosip_mockidentitysystem?currentSchema=mockidentitysystem
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - MOSIP_MOCK_IDA_KYC_TRANSACTION_TIMEOUT_SECS=900
    depends_on:
      - esignet-database.localhost
    networks:
      - network

  esignet.localhost:
    image: 'mosipid/esignet-with-plugins:1.5.1'
    user: root
    ports: 
      - 8088:8088
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - plugin_name_env=esignet-mock-plugin.jar
      - SPRING_DATASOURCE_URL=jdbc:postgresql://esignet-database.localhost:5432/mosip_esignet?currentSchema=esignet
      - MOSIP_ESIGNET_MOCK_DOMAIN_URL=http://mock-identity-system.localhost:8082
      - MOSIP_ESIGNET_INTEGRATION_KEY_BINDER=MockKeyBindingWrapperService
      - SPRING_CACHE_TYPE=redis
      - SPRING_REDIS_HOST=redis-server
      - SPRING_REDIS_PASSWORD=
    depends_on:
      - esignet-database.localhost
      - mock-identity-system.localhost
      - esignet-redis.localhost
    networks:
      - network

  esignet-oidc-ui.localhost:
    image: 'mosipid/oidc-ui:1.5.1'
    user: root
    ports:
      - 3000:3000
    environment:
      - container_user=mosip
      - DEFAULT_WELLKNOWN=%5B%7B%22name%22%3A%22OpenID%20Configuration%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-configuration%22%7D%2C%7B%22name%22%3A%22Jwks%20Json%22%2C%22value%22%3A%22%2F.well-known%2Fjwks.json%22%7D%2C%7B%22name%22%3A%22Authorization%20Server%22%2C%22value%22%3A%22%2F.well-known%2Foauth-authorization-server%22%7D%5D
      - SIGN_IN_WITH_ESIGNET_PLUGIN_URL=https://raw.githubusercontent.com/mosip/artifactory-ref-impl/master/artifacts/src/mosip-plugins/sign-in-with-esignet/sign-in-with-esignet.zip
    volumes:
      - ./nginx-esignet.conf:/etc/nginx/nginx.conf
    depends_on:
      - esignet.localhost
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.esignet.rule=Host(`esignet-oidc-ui.localhost`)"
    networks:
      - network

  #traefik is used to expose the esignet services to the outside world (host machine)
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - network

networks:
  network:
    name: network-inji
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.26.0/24
